version: "3.8"

services:
  webapi:
    image: docker.io/library/agartapi
    depends_on:
      - app_db
      - redis
    container_name: agart-services
    ports:
      - "8088:80"
    build:
      context: ./Backend
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=postgres;Server=app_db;Port=5432;Database=AgArtLamps;Pooling=true;
      - REDIS_CONNECTION=redis:6379
      - STRIPE_SK=sk_test_51PGTp8B68kIb1rZLBU6Qw5g5kWDH1czC51pqPPJSW1kNGBQNzygQNHfh3oHSSQwdRtwyKKik8v0UF0XL79SN8UzO00Wevko7TQ
      - STRIPE_ES=whsec_98223f8e0d6ed4b2f95e6a0b1585a07349f5860e0fdcc6a3b01e5128ac30b4cf
      - JWT_VALID_ISSUER=https://securetoken.google.com/agart-dev
      - JWT_VALID_AUDIENCE=agart-dev
      - APP_DOMAIN=http://localhost:5173
      - ADMIN_DOMAIN=http://localhost:5174
      - ASPNETCORE_URLS=http://+:80
    networks:
      - dev

  app_db:
    image: postgres:latest
    container_name: agart-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: AgArtLamps
    ports:
      - "5433:5432"
    networks:
      - dev
    volumes:
      - app_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: agart-redis
    ports:
      - "6380:6379"
    networks:
      - dev
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

networks:
  dev:

volumes:
  app_data:
  redis_data:
